# It's important to check if {{ item }} is packaged, and to *not* check if {{
# item }} is installed. Why? Imagine the following scenario:
#
# 1. A user manually installs package foo from the AUR.
# 2. The user starts using this role to ensure foo is installed.
# 3. A new version of foo is released.
# 4. The user attempts to update their system with `aursync -u; pacman -Syu`.
#
# pacman will only install the new version of foo if `aursync -u` placed a new
# version in the local repository, `aursync -u` will only do that if an old
# version of foo is already present, and an old version of foo will only be
# present in the repository if this role unconditionally packages each {{ item
# }} it encounters.
- name: Check if {{ item }} is packaged
  command: pacman -Si aur/{{ item }}
  changed_when: False
  check_mode: False
  failed_when: False
  register: result

- block:

  - name: Package {{ item }}
    command: aursync --chroot --no-confirm {{ item }}
    become_user: aur-packager

  - name: Sync aur repository
    command: pacman -Sy --config /etc/pacman.d/aur.conf

  when: result.rc != 0
  become: true

- name: Install {{ item }}
  pacman:
    name: '{{ item }}'
    state: present
  become: true
