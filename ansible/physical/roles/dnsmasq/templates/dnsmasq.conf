# dnsmasq configuration file. See dnsmasq(8) for details.

# The following options make you a better netizen, since they tell dnsmasq to
# avoid forwarding queries which the public DNS servers cannot answer.
#
# Never forward plain names, i.e. names without a dot or domain part.
domain-needed
# Never forward reverse lookups for non-routable IP addresses. (e.g. 10.x.x.x).
bogus-priv

# Listen for DHCP and DNS requests on the following interfaces. Loopback is
# implicitly appended.
interface={{ dnsmasq_lan_if }}
interface={{ dnsmasq_dmz_if }}
interface={{ dnsmasq_secure_wlan_if }}

# Enable the DHCP server. Set this once for each network on which DHCP service
# is provided.
dhcp-range=192.168.10.10,192.168.10.254
dhcp-range=192.168.11.10,192.168.11.254
dhcp-range=192.168.13.10,192.168.13.254

# Always give the host with the given ethernet address the given IP address.
dhcp-host=68:05:ca:18:45:bf,192.168.11.2

# If dnsmasq can't answer a DNS query from its cache, then by default, it will
# forward the request upstream by consulting with the resolver. The resolver
# will consult /etc/resolv.conf, which will have been populated by DHCP.
#
# This works well for requests that originate from network clients. But it
# doesn't work so well for requests that originate from local processes.
# Requests from local processes will go directly to the resolver, bypassing
# dnsmasq entirely. At best, this is inefficient.
#
# One can force local processes to use dnsmasq by configuring the resolver to
# send requests to localhost, where dnsmasq is listening. In this case, though,
# who shall dnsmasq forward queries to?
#
# Ignore /etc/resolv.conf.
no-resolv
# Forward queries here instead.
server=1.1.1.1
