# TODO: Support ipv6 and http2. See:
# https://mozilla.github.io/server-side-tls/ssl-config-generator/

user http;
worker_processes auto;
events {}
http {
    include mime.types;

    # If left at the default of 1024, nginx refuses to start. It may have
    # something to do with 2048 bit SSL keys.
    types_hash_max_size 4096;

    # www.jerebear.name
    server {
        listen 80;
        server_name jerebear.name www.jerebear.name;
        return 301 https://www.jerebear.name$request_uri;
    }
    server {
        listen 443 ssl http2;
        server_name              www.jerebear.name;
        ssl_certificate      ssl/www.jerebear.name.chained.crt;
        ssl_certificate_key  ssl/www.jerebear.name.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  # SSLv3 is insecure
        root /usr/share/nginx/www.jerebear.name;
    }

    # www.backtobasicsreading.com
    server {
        listen 80;
        server_name
            backtobasicsreading.com
            backtobasicsreadingclinic.com
            www.backtobasicsreading.com
            www.backtobasicsreadingclinic.com;
        return 301 https://www.backtobasicsreading.com$request_uri;
    }
    server {
        listen 443 ssl http2;
        server_name www.backtobasicsreading.com;
        ssl_certificate      ssl/www.backtobasicsreading.com.chained.crt;
        ssl_certificate_key  ssl/www.backtobasicsreading.com.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  # SSLv3 is insecure
        root /usr/share/nginx/www.backtobasicsreading.com;
    }

    # packages.jerebear.name
    server {
        listen 80;
        server_name packages.jerebear.name;
        return 301 https://$server_name$request_uri;
    }
    server {
        listen 443 ssl http2;
        server_name              packages.jerebear.name;
        ssl_certificate      ssl/packages.jerebear.name.chained.crt;
        ssl_certificate_key  ssl/packages.jerebear.name.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  # SSLv3 is insecure
        root /srv/packages.jerebear.name;
        autoindex on;
        location /arch-linux/ichi-private/ {
            auth_basic "ichi-private repository";
            auth_basic_user_file /etc/nginx/{{
                'packages.jerebear.name/arch-linux/ichi-private' | systemd_escape
            }}.htpasswd;
        }
    }

    # airsonic.jerebear.name
    server {
        listen 80;
        server_name airsonic.jerebear.name;
        return 301 https://$server_name$request_uri;
    }
    server {
        listen 443 ssl http2;
        server_name          airsonic.jerebear.name;
        ssl_certificate      ssl/airsonic.jerebear.name.chained.crt;
        ssl_certificate_key  ssl/airsonic.jerebear.name.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  # SSLv3 is insecure
        # https://airsonic.github.io/docs/proxy/nginx/
        location / {
            proxy_set_header  X-Real-IP          $remote_addr;
            proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto  https;
            proxy_set_header  X-Forwarded-Host   $http_host;
            proxy_set_header  Host               $http_host;
            proxy_max_temp_file_size 0;
            proxy_pass http://127.0.0.1:8080;
            proxy_redirect http:// https://;
        }
    }

    # syncthing.jerebear.name
    #
    # https://docs.syncthing.net/users/reverseproxy.html#nginx
    # https://docs.syncthing.net/users/faq.html#why-do-i-get-host-check-error-in-the-gui-api
    server {
        listen 80;
        server_name syncthing.jerebear.name;
        return 301 https://$server_name$request_uri;
    }
    server {
        listen 443 ssl http2;
        server_name          syncthing.jerebear.name;
        ssl_certificate      ssl/syncthing.jerebear.name.chained.crt;
        ssl_certificate_key  ssl/syncthing.jerebear.name.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  # SSLv3 is insecure
        location / {
            proxy_set_header  Host               localhost;
            proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto  $scheme;
            proxy_set_header  X-Real-IP          $remote_addr;
            # It would be better to have per-user passwords. But if there's only
            # one user, setting the following just options once saves some work.
            proxy_pass http://127.0.0.1:8384/;
            auth_basic "syncthing";
            auth_basic_user_file /etc/nginx/{{
                'syncthing.jerebear.name' | systemd_escape
            }}.htpasswd;
        }
    }

    # transmission.jerebear.name
    server {
        listen 80;
        server_name transmission.jerebear.name;
        return 301 https://$server_name$request_uri;
    }
    server {
        listen 443 ssl http2;
        server_name          transmission.jerebear.name;
        ssl_certificate      ssl/transmission.jerebear.name.chained.crt;
        ssl_certificate_key  ssl/transmission.jerebear.name.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  # SSLv3 is insecure
        location / {
            auth_basic "Transmission";
            auth_basic_user_file /etc/nginx/{{
                'transmission.jerebear.name' | systemd_escape
            }}.htpasswd;
            root /usr/share/nginx/transmission.jerebear.name;
        }
        location /transmission/ {
            proxy_pass http://127.0.0.1:9091;
            proxy_pass_header X-Transmission-Session-Id;
            proxy_set_header  Host             localhost;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header  X-Real-IP        $remote_addr;
        }
        location /torrents/ {
            autoindex on;
            root /srv/media;
        }
    }
}
