# Configuration file for dnsmasq.
#
# See "dnsmasq --help" or dnsmasq(8) for details.

{% if 'routers' in group_names %}
# The following two options make you a better netizen, since they tell dnsmasq
# to filter out queries which the public DNS cannot answer, and which load the
# servers (especially the root servers) unnecessarily. If you have a
# dial-on-demand link they also stop these requests from bringing up the link
# unnecessarily.
#
# However, these options are problematic for workstations. Imagine the case
# where a printer has a plain host name (e.g. BROTHER01234567) and a private IP
# address (e.g. 192.168.0.10). In this case, the workstation's dnsmasq instance
# has a legitimate interest in forwarding the plain name lookup to the network's
# DNS resolver. Similarly, a workstation user might know the IP address of the
# printer, and want to perform a reverse lookup of its name.
#
# Never forward plain names (without a dot or domain part).
domain-needed
# Never forward addresses in the non-routed address spaces.
bogus-priv
{% endif %}

{% if 'workstations' in group_names %}
# By default, dnsmasq will send queries to any of the upstream servers it knows
# about and tries to favour servers to are known to be up. In contrast, this
# option forces dnsmasq to try each query with each server strictly in the order
# they appear in /etc/resolv.conf. This is especially useful when connected to a
# workplace VPN: the in-VPN name servers can resolve queries that public name
# servers can't, and the in-VPN name servers are also likely listed near the top
# of /etc/resolv.conf.
strict-order
{% endif %}

# Listen for DHCP and DNS requests only on the specified interface and loopback.
interface=br-libvirt

# Define the address range and optionally the lease time for the DHCP server.
dhcp-range=192.168.101.2,192.168.101.200
