# Configuration for resolvconf(8). See resolvconf.conf(5) for details.
#
# In a full-blown deployment in which this host serves both local processes and
# remote clients, the query paths might look like the following:
#
#     upstream
#     `-- stubby
#         `-- dnsmasq
#             |-- resolver
#             |   `-- local client
#             `-- network client

# Used to populate /etc/resolv.conf, dnsmasq_resolv, and so on. Port numbers may
# not be set: https://sourceware.org/bugzilla/show_bug.cgi?id=14242
name_servers='127.0.0.1'

# Generate configuration files for dnsmasq. dnsmasq_conf lists domain-specific
# name servers. dnsmasq_resolv lists global name servers. dnsmasq_resolv is
# populated with non-local name servers (e.g. 1.1.1.1) first, followed by others
# such as those provided by DHCP.
#
# By default, dnsmasq prefers known-working name servers. If you want dnsmasq to
# prefer a specific name server, then set `strict-order` in dnsmasq.conf, and
# ensure the preferred name server appears at the top of dnsmasq_resolv. If you
# want dnsmasq to always use a specific name server, then set the following in
# dnsmasq.conf:
#
#     no-resolv
#     server=â€¦
#
# Curously, both no-resolv and strict-order cause dnsmasq to exclusively use the
# listed name server, ignoring entries in dnsmasq_resolv.
dnsmasq_conf=/etc/dnsmasq-conf.conf
dnsmasq_resolv=/etc/dnsmasq-resolv.conf

# If the resolver is asked to resolve a bare name, it will prepend that bare
# name to a list of domains, and look up the results. For example, if a client
# looks up "foo" and resolv.conf has "search example.com example.org," then the
# resolver will look up foo.example.com and foo.example.org.
#
# Setting "search" to "." causes bare names to be tacked onto the root domain,
# which effectively disables name mangling. (The local DNS resolver, dnsmasq,
# should be configured to avoid forwarding these un-resolvable bare name queries
# to upstream DNS servers.)
#
# "search" (and "domain") can be set via this file, or set via DHCP. As an
# example of the latter, a router might insert "search hsd1.vt.comcast.net" into
# resolv.conf at the behest of Comcast's DHCP servers.
#
# Set "search" to ".". The "search_domains" option does the same thing, but
# is affected by "domains_blacklist."
prepend_search='.'
# Prevent DHCP from inserting domains into "search."
domain_blacklist='*'

# vim: ft=sh:
