- name: Assert required variables are present
  assert:
    that: coworkers is defined

- block:

  - name: Create user {{ item }}
    user:
      name: '{{ item }}'
      groups: libvirt
    register: result

  # It would be better to do this as a handler.
  - name: Lock password for user {{ item }}
    command: passwd --lock {{ item }}
    when: result is changed

  become: true

- name: Get information about {{ item }}
  getent:
    database: passwd
    key: '{{ item }}'
    split: ':'

- name: "Set variable referencing {{ item }}'s home directory"
  set_fact:
    coworker_home: '{{ getent_passwd[item][4] }}'

- block:

  - name: Create ~/.ssh
    file:
      path: '{{ coworker_home }}/.ssh'
      state: directory
      mode: 0700

  - name: Create ~/.ssh/controlmasters
    file:
      path: '{{ coworker_home }}/.ssh/controlmasters'
      state: directory
      mode: 0700

  - name: Install ~/.ssh/pulp-vm
    copy:
      src: '{{ coworker_pulp_vm_private_key }}'
      dest: '{{ coworker_home }}/.ssh/pulp-vm'
      mode: 0600
    when: coworker_pulp_vm_private_key is defined

  - name: Install ~/.ssh/pulp-vm.pub
    copy:
      src: '{{ coworker_pulp_vm_public_key }}'
      dest: '{{ coworker_home }}/.ssh/pulp-vm.pub'
      mode: 0600
    when: coworker_pulp_vm_public_key is defined

  - name: Ensure user can SSH into Pulp VMs
    blockinfile:
      path: '{{ coworker_home }}/.ssh/config'
      create: true
      mode: 0600
      block: |
        Host rhel-? fedora-??
          User root
          StrictHostKeyChecking no
          UserKnownHostsFile /dev/null

        Host rhel-?-* fedora-??-*
          User root
          IdentityFile ~/.ssh/pulp-vm
          StrictHostKeyChecking no
          UserKnownHostsFile /dev/null

          ControlMaster auto
          ControlPersist 5m
          ControlPath ~/.ssh/controlmasters/%C

  become: true
  become_user: '{{ item }}'
