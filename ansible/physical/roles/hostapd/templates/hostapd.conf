# References:
#
# * /usr/share/doc/hostapd/hostapd.conf
# * http://www.linuxwireless.org/en/users/Documentation/hostapd/
# * https://en.wikipedia.org/wiki/Service_set_(802.11_network)
# * https://en.wikipedia.org/wiki/List_of_WLAN_channels
# * https://wiki.gentoo.org/wiki/Hostapd
# * `iw phy`, `iw dev` and `iw dev $ifname link`. `iw dev <ifname> scan` when
#   interface not controlled by hostapd
#
# This configuration file is a little complicated, as it makes multiple logical
# networks available. Before editing this file, make sure you have a solid
# understanding of hostapd and related concepts. The links above should get you
# started. Especially important are terms like AP, BSS, SSID and BSSID. A brief
# review follows. This review ignores ESSes and ESSIDs.
#
# An AP and all of its associated stations (e.g. laptops, cell phones) form a
# BSS. A BSS is identified by both a BSSID and an SSID. The former is
# machine-readable, the latter is human-readable, and both should be unique
# within a local area. ("local" is somewhat vaguely defined.)
#
# So, how may a single AP advertise multiple networks? By making multiple BSSes
# available. For each BSS that an AP would like to advertise, a BSSID-SSID pair
# must be defined.
#
# This presents a problem. An AP is given a MAC address at the factory. But a
# BSSID is identified by a MAC address, so if an AP is to advertise two or more
# BSSes, then it must have two or more MAC addresses. What MAC addresses may be
# used? And how can hostapd assign them? Well... the exact procedure for
# generating a MAC address for each BSSID is a bit hard to understand. I'm not
# confident in my reading of `/usr/share/doc/hostapd/hostapd.conf`.
#
# One other item of note: "hostapd uses some of the values configured for the
# first BSS as the defaults for the following BSSes. However, it is recommended
# that all BSSes include explicit configuration of all relevant configuration
# items." Global value like the radio channel may be specified just once.

# Define the physical interface used by the AP.
interface={{ hostapd_wlan_if }}

# hw_mode defines which frequencies may be used. If set to "a" or "g", then IEEE
# 802.11n may also be enabled:
#
# * If hw_mode=a and ieee80211n=0, then wireless A is used on the 5 GHz bands.
# * If hw_mode=g and ieee80211n=0, then wireless G is used on the 2.4 GHz bands.
# * If hw_mode=a and ieee80211n=1, then wireless N is used on the 5 GHz bands.
# * If hw_mode=g and ieee80211n=1, then wireless N is used on the 2.4 GHz bands.
#
# `iw phy` states which frequencies are supported by the card(s) in a system.
# One may either select a specific channel or use ACS (automatic channel
# selection). Each ACS scan takes ~100ms per channel. (e.g. 11 channels *
# 100ms/channel * 5 == 5.5s) If using ACS and `chanlist` isn't specified, then
# all channels allowed by hw_mode are scanned.
hw_mode=g
ieee80211n=1
channel=acs_survey
chanlist=1 6 11
acs_num_scans=10

# In the US, devices operating on the 5 GHz frequencies must support DFS
# (dynamic frequency selection) and TPC (transmit power control) to avoid
# interference with weather-radar and military applications.
#
# * Enabling 802.11d support inserts regulatory information into frames. Make
#   sure to install crda and set the current regulatory domain!
# * Enabling 802.11h support enables weather-radar detection and DFS support.
# * Power Constrant frames "allow a network to describe the maximum transmit
#   power to stations. In addition to a regulatory maximum, there may be another
#   maximum in effect. The only field, a one-byte integer, is the number of
#   decibels by which any local constraint reduces the regulatory maximum. If,
#   for example, the regulatory maximum power were 10 dBm, but this information
#   element contained the value 2, then the station would set its maximum
#   transmit power to 8 dBm." Power Constraint frames are optional. They're only
#   sent out when TPC is required by local regulations. (AFAICT, the
#   local_pwr_constraint value is inserted into Power Constraint frames. The
#   value of "3" is chosen because that's what the default config uses, and 3dB
#   seems reasonable.)
#
# If ieee80211d=1 and local_power_constraint are configured, then
# spectrum_mgmt_required is automatically enabled if required by regulations.
country_code=US
ieee80211d=1
ieee80211h=1
local_pwr_constraint=3

# The WMM (WiFi Multimedia) specification is a subset of 802.11e. It's basically
# a QoS implementation. The 802.11n spec states that clients must support WMM in
# order to use HT (high throughput) link rates. Clients that don't support WMM
# are limited to 54 Mbps.
wmm_enabled=1

# To use HT, one must also state which HT capabilities the card in this system
# supports. To see the full list of ht_capab values, see the sample
# hostapd.conf. To see which HT technologies are supported by this system's
# card, check the vendor's manual or the output of `iw phy`.
ht_capab=[LDPC][HT40+][HT40-][TX-STBC][TX-STBC1][MAX-AMDSU-3839][DSSS_CD-40]

# First AP. bss=<same as "interface"> bssid=<derived from "interface">
ssid=HouseOfCuddles

# Second AP. bssid=<auto-generated by hostapd>
bss={{ hostapd_wlan_if }}_secure
ssid=HomeOfCuddles
auth_algs=1
wpa=2
wpa_key_mgmt=WPA-PSK
rsn_pairwise=CCMP
wpa_passphrase={{ hostapd_passphrase }}
