#!/usr/bin/env python3
# coding=utf-8
"""Delete old Btrfs snapshots from ``/mnt/btrfs``.

Delete old Btrfs snapshots (subvolumes) from ``/mnt/btrfs``. Each snapshot
named 'root-<iso-8601-string>' is considered, and snapshots with other names
are ignored. <iso-8601-string> is assumed to describe when the snapshot was
created. For each snapshot:

1. If the snapshot is less than a month old, it is kept.
2. If the snapshot is less than three months old and was created on a
   Wednesday, it is kept.
3. Otherwise, the snapshot is deleted.
"""
import datetime
import os
import pathlib
import subprocess


def _get_datetime(path):
    """Parse the given path, and return the embedded ISO 8601 datetime.

    :param path: A string like ``/mnt/btrfs/root-2016-08-21T18:03-04:00``. The
        string must be a valid path. Its basename must be in the format
        ``root-{iso_8601_minutes_datetime}``. The embedded timezone
        information, if present, may contain a colon (e.g. ``-04:00``).
    :returns: An "aware" ``datetime.datetime`` object.
    """
    dir_name = os.path.basename(path)
    if dir_name[-3] == ':':
        # root-2016-08-21T18:03-04:00 → root-2016-08-21T18:03-0400
        dir_name = dir_name[:-3] + dir_name[-2:]
    return datetime.datetime.strptime(dir_name, 'root-%Y-%m-%dT%H:%M%z')


def main():
    """Find and prune snapshots."""
    now = datetime.datetime.now(datetime.timezone.utc)
    snapshots = pathlib.PosixPath('/mnt/btrfs').glob('root-*')
    for snapshot in snapshots:
        created = _get_datetime(str(snapshot))
        age = now - created
        if age <= datetime.timedelta(weeks=4):
            continue
        elif age <= datetime.timedelta(weeks=12) and created.isoweekday() == 3:
            continue  # 1–7 == mon–sun
        else:
            subprocess.run(['btrfs', 'subvolume', 'delete', str(snapshot)])


if __name__ == '__main__':
    main()
