#!/usr/bin/env bash
set -euo pipefail

# Create a virtual bridge, to which VMs will attach.
#
# A bridge inherits the MAC address of the first interface attached to it. We
# create a dummy network interface and attach it to the bridge to ensure the
# bridge doesn't inherit the MAC address of one of the attached VMs. (What would
# happen if that VM went offline?)
ip link add name br-libvirt type bridge
ip link set br-libvirt up
ip address add local 192.168.100.1/24 dev br-libvirt
mac="$(hexdump -vn3 -e '/3 "52:54:00"' -e '/1 ":%02x"' -e '"\n"' /dev/urandom)"
ip link add name br-libvirt-nic address "$mac" type dummy
ip link set br-libvirt-nic up
ip link set br-libvirt-nic master br-libvirt

# Use the "metric" option to ensure resolv.conf lists this name server before
# most other name servers. The nameserver at 192.168.100.1 - dnsmasq - is smart
# enough to avoid querying itself, and will move on to the next item in
# /etc/resolv.conf.
#
# A more elegant solution is to list a domain in this resolv.conf, and then to
# insert `private_interfaces=(br-libvirt)` in /etc/resolvconf.conf. But that
# only works if the hosts attached to br-libvirt *have* a domain, and they
# don't. They all have plain names, like "fedora-25".
echo 'nameserver 192.168.100.1' | resolvconf -a br-libvirt.dhcp -m -1

# vim:set ts=2 sw=2 et:
