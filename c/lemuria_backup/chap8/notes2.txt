Conversion specifiers like %d and %f automatically skip leading whitespace while looking for something to convert. This means that the format strings "%d %d" and "%d%d" act exactly the same--the whitespace in the first format string causes whitespace to be skipped before the second %d, but the second %d would have skipped that whitespace anyway. (Yet another scanf foible is that the innocuous-looking format string "%d\n" converts a number and then skips whitespace, which means that it will gobble up not only a newline following the number it converts, but any number of newlines or whitespace, and in fact it will keep reading until it finds a non-whitespace character, which it then won't read. This sounds confusing, but so is scanf's behavior when given a format string like "%d\n". The moral is simple: don't use trailing \n's in scanf format strings.) 

scanf() returns a value equal to the number of items it has scanned. 
