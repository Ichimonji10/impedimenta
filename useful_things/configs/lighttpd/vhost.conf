server.modules += ("mod_proxy", "mod_redirect", "mod_status")

# vhost config with https
# =======================
#
# Redirect clients from "example.com" to "www.example.com". If a client requests
# "subsonic.example.com", force them to connect via HTTPS and proxy the request
# to another server. Also provide a "/server-status" URL to clients with an IP
# of 192.168.1.0/24.
#
# Examples of servers that can accept proxied HTTPS requests are Squid and
# Subsonic.
#
# Server Name Indication (SNI) allows a server to present multiple SSL
# certificates on the same IP address and port. This allows for name-based
# responses over HTTPS. See:
# https://redmine.lighttpd.net/projects/1/wiki/Docs_SSL#Server-Name-Indication-SNI
#
# The ssl.pemfile and ssl.ca-file options can be moved inside the appropriate
# $HTTP["host"] sections. Doing so enables SNI. Even so, lighttpd still requires
# a default .pem file, placed outside of any $HTTP["host] block.

# Define responses for HTTP requests.
$SERVER["socket"] == ":80" {
    $HTTP["host"] == "example.com" {
        url.redirect = ("^/(.*)" => "http://www.example.com/$1")
    } else $HTTP["host"] == "www.example.com" {
        server.document-root = "/srv/http/www.example.com"
    } else $HTTP["host"] == "subsonic.example.com" {
        url.redirect = ("^/(.*)" => "https://subsonic.example.com/$1")
    }

    $HTTP["remoteip"] == "192.168.1.0/24" {
        status.status-url = "/server-status"
    }
}
# Define responses for HTTPS requests.
else $SERVER["socket"] == ":443" {
    ssl.engine  = "enable"
    ssl.pemfile = "/etc/lighttpd/ssl/subsonic.example.com.pem"
    ssl.ca-file = "/etc/lighttpd/ssl/GandiStandardSSLCA.pem"

    $HTTP["host"] == "subsonic.example.com" {
        # This proxying is completely transparent to clients.
        proxy.server = (
            # Load-balance requests for this path...
            "" => (
                # ... among the following servers. The string naming each server
                # is just a label, and it has little functional impact.
                # (affects logfile output?)
                ("host" => "127.0.0.1", "port" => 4040)
            )
        )
    }
}
