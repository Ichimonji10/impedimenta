# Issue `ls -l /dev/disk/by-uuid` or `lsblk -o +UUID` to see what these UUIDs
# correspond to.
UUID=... /          ext4 rw,relatime,data=ordered 0 1
UUID=... /mnt/data1 ext4 defaults                 0 2
UUID=... /mnt/data2 ext4 defaults                 0 2
UUID=... none       swap defaults                 0 2

# /mnt/data1 is a striped raid array, and it is therefore especially likely to
# experience a failure. How can we take advantage of it's speed yet also protect
# against a failure?
#
# 1. Use rsync (with the --delete option) and cron to push data from /mnt/data1
#    to /mnt/data2 on a regular basis.
# 2. Use "bind mounts" to make /mnt/data1 subdirectories available on the root
#    filesystem at various points. If /mnt/data1 experiences issues, change the
#    bind mounts to /mnt/data2 and issue `mount -a`.
#
# Why not just use symlinks?
#
# 1. Certain appliations don't play well with symlinks. For example, vsftpd
#    won't follow symlinks.
# 2. Centralization. If a disk fails, it's easier to edit /etc/fstab than to
#    hunt through the filesystem for symlinks.
/mnt/data1/ichimonji10 /srv/ftp/ichimonji10 none bind 0 0
/mnt/data1/ftp_upload  /srv/ftp/ftp_upload  none bind 0 0
/mnt/data1/http        /srv/http            none bind 0 0
